#! -------------------------------------------------------------------------- #
#!                            General Settings                                #
#! -------------------------------------------------------------------------- #

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

#! ---------------------------- Startup Commands ---------------------------- #

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',

    # Run Sketchybar together with AeroSpace
    # sketchbar has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    # # ? https://nikitabobko.github.io/AeroSpace/goodies#show-aerospace-workspaces-in-sketchybar
    # 'exec-and-forget sketchybar'
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar',
]

#! ---------------------------- Workspace Change Hooks ---------------------------- #

# Notify Sketchybar about workspace change
# exec-on-workspace-change = ['/bin/bash', '-c',
#     'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
#       # # ? https://nikitabobko.github.io/AeroSpace/goodies#show-aerospace-workspaces-in-sketchybar
# ]
# exec-on-workspace-change = [
#     '/bin/bash',
#     '-c',
#     '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change AEROSPACE_FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE AEROSPACE_PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
# ]

#! ---------------------------- Login Settings ---------------------------- #

# Start AeroSpace at login
start-at-login = true

#! ---------------------------- Normalization Settings ---------------------------- #

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

#! ---------------------------- Layout Settings ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

#! ---------------------------- Key Mapping ---------------------------- #

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

#! ---------------------------- Mouse Follows Focus ---------------------------- #

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = "move-mouse window-lazy-center"

#! -------------------------------------------------------------------------- #
#!                      Workspace to Monitor Assignment                     #
#! -------------------------------------------------------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    [workspace-to-monitor-force-assignment]
    1 = [ 'secondary', 'built-in', 'main']
    2 = [ 'secondary', 'built-in', 'main']
    3 = [ 'secondary', 'built-in', 'main']
    4 = [ 'secondary', 'built-in', 'main']
    5 = [ 'secondary', 'built-in', 'main']
    B = [ 'main', 'built-in', 'secondary']
    F = [ 'main', 'built-in', 'secondary']
    T = [ 'main', 'built-in', 'secondary']
    C = [ 'main', 'built-in', 'secondary']
    M = [ 'main', 'built-in', 'secondary']
    N = [ 'main', 'built-in', 'secondary']
    P = [ 'main', 'built-in', 'secondary']
    W = [ 'main', 'built-in', 'secondary']
    O = [ 'main', 'built-in', 'secondary']
    U = [ 'secondary', 'built-in', 'main']

#! -------------------------------------------------------------------------- #¨¨
#!                                Gaps Settings                               #
#! -------------------------------------------------------------------------- #

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 20
inner.vertical = 20
outer.top = [{ monitor."main" = 5 }, 40]
outer.left = 15
outer.bottom = 15
outer.right = 15

#! -------------------------------------------------------------------------- #
#!                             Main Mode Bindings                             #
#! -------------------------------------------------------------------------- #

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

#! ---------------------------- Key Definitions ---------------------------- #

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

#! ---------------------------- Window Layout ---------------------------- #

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

#! ---------------------------- Focus Movement ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

#! ---------------------------- Window Movement ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'


#! ---------------------------- Workspace Management ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-alt-1 = 'workspace 1'
cmd-ctrl-alt-2 = 'workspace 2'
cmd-ctrl-alt-3 = 'workspace 3'
cmd-ctrl-alt-4 = 'workspace 4'
cmd-ctrl-alt-5 = 'workspace 5'
cmd-ctrl-alt-b = 'workspace B'  # Browsers
cmd-ctrl-alt-f = 'workspace F'  # Files
cmd-ctrl-alt-t = 'workspace T'  # Terminals
cmd-ctrl-alt-c = 'workspace C'  # Code editors
cmd-ctrl-alt-m = 'workspace M'  # Messaging
cmd-ctrl-alt-n = 'workspace N'  # Notes & News
cmd-ctrl-alt-p = 'workspace P'  # Parallels and VMs
cmd-ctrl-alt-w = 'workspace W'  # Work
cmd-ctrl-alt-o = 'workspace O'  # Orb
cmd-ctrl-alt-u = 'workspace U'  # Utilities

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-ctrl-alt-shift-o = ['move-node-to-workspace O', 'workspace O']
cmd-ctrl-alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
cmd-ctrl-alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
cmd-ctrl-alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
cmd-ctrl-alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
cmd-ctrl-alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
cmd-ctrl-alt-shift-b = ['move-node-to-workspace B', 'workspace B']
cmd-ctrl-alt-shift-f = ['move-node-to-workspace F', 'workspace F']
cmd-ctrl-alt-shift-t = ['move-node-to-workspace T', 'workspace T']
cmd-ctrl-alt-shift-c = ['move-node-to-workspace C', 'workspace C']
cmd-ctrl-alt-shift-m = ['move-node-to-workspace M', 'workspace M']
cmd-ctrl-alt-shift-n = ['move-node-to-workspace N', 'workspace N']
cmd-ctrl-alt-shift-p = ['move-node-to-workspace P', 'workspace P']
cmd-ctrl-alt-shift-u = ['move-node-to-workspace U', 'workspace U']
cmd-ctrl-alt-shift-w = ['move-node-to-workspace W', 'workspace W']

#! ---------------------------- Fullscreen ---------------------------- #

alt-shift-y = 'fullscreen'

#! ---------------------------- Workspace Navigation ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

#! ---------------------------- Mode Switching ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

#! ---------------------------- Resize Mode Bindings ---------------------------- #

alt-shift-r = 'mode resize'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'

#! ---------------------------- Resize Commands ---------------------------- #

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

#! ---------------------------- Mode Exit Keys ---------------------------- #

enter = 'mode main'
esc = 'mode main'

#! -------------------------------------------------------------------------- #
#!                           Service Mode Bindings                            #
#! -------------------------------------------------------------------------- #

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


#! -------------------------------------------------------------------------- #
#!                           Window Detection Rules                           #
#! -------------------------------------------------------------------------- #

#? Alternative command to get app ID-s :
#? lsappinfo list | grep 'bundleID=' | cut -d'"' -f2

#! ---------------------------- Browsers ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = 'move-node-to-workspace B'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace B'

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'move-node-to-workspace B'

[[on-window-detected]]
if.app-id = 'com.vivaldi.Vivaldi'
run = 'move-node-to-workspace B'

#! ---------------------------- Files ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'move-node-to-workspace F'

#! ---------------------------- Terminals ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace T'

[[on-window-detected]]
if.app-id = 'com.termius-dmg.mac'
run = 'move-node-to-workspace T'

[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
run = ['move-node-to-workspace T']

#! ---------------------------- Code Editors ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace C'

[[on-window-detected]]
if.app-id = 'com.cursor.Cursor'
run = 'move-node-to-workspace C'

#! ---------------------------- Messaging ---------------------------- #
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace M'

#! ---------------------------- Notes & News ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.apple.news'
run = 'move-node-to-workspace N'

[[on-window-detected]]
if.app-id = 'com.capacities.main'
run = 'move-node-to-workspace N'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace N'

#! ---------------------------- Parallels and VMs ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.parallels.desktop.console'
run = 'move-node-to-workspace P'

[[on-window-detected]]
if.app-id = 'com.parallels.winapp.*'
run = 'move-node-to-workspace P'

[[on-window-detected]]
if.app-name-regex-substring = 'parallels'
run = 'move-node-to-workspace P'

[[on-window-detected]]
if.app-id = 'com.microsoft.rdc.macos'
run = 'move-node-to-workspace P'

#! ---------------------------- Windows & Work ---------------------------- #
[[on-window-detected]]
if.app-id = 'com.citrix.receiver.icaviewer.mac'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace W']

[[on-window-detected]]
if.app-id = 'com.microsoft.rdc.macos'
run = ['layout tiling', 'move-node-to-workspace W']

#! ---------------------------- OrbStack ---------------------------- #
[[on-window-detected]]
if.app-id = 'dev.kdrag0n.MacVirt'
run = 'move-node-to-workspace O'

#! ---------------------------- Utilities --------------------------- #
[[on-window-detected]]
if.app-id = 'com.eltima.cmd1'
run = ['layout tiling', 'move-node-to-workspace U']

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout tiling', 'move-node-to-workspace U']
